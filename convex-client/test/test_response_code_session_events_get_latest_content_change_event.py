# coding: utf-8

"""
    Convex App - OpenAPI 3.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from convex_client.models.response_code_session_events_get_latest_content_change_event import ResponseCodeSessionEventsGetLatestContentChangeEvent

class TestResponseCodeSessionEventsGetLatestContentChangeEvent(unittest.TestCase):
    """ResponseCodeSessionEventsGetLatestContentChangeEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseCodeSessionEventsGetLatestContentChangeEvent:
        """Test ResponseCodeSessionEventsGetLatestContentChangeEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseCodeSessionEventsGetLatestContentChangeEvent`
        """
        model = ResponseCodeSessionEventsGetLatestContentChangeEvent()
        if include_optional:
            return ResponseCodeSessionEventsGetLatestContentChangeEvent(
                status = 'success',
                error_message = '',
                error_data = None,
                value = convex_client.models.response_code_session_events_get_latest_content_change_event_value.Response_codeSessionEvents_getLatestContentChangeEvent_value(
                    event = convex_client.models.request_code_session_events_commit_code_session_event_args_event_one_of.Request_codeSessionEvents_commitCodeSessionEvent_args_event_oneOf(
                        data = convex_client.models.request_code_session_events_commit_code_session_event_args_event_one_of_data.Request_codeSessionEvents_commitCodeSessionEvent_args_event_oneOf_data(
                            after = '', 
                            before = '', ), 
                        type = 'content_changed', ), 
                    id = '', 
                    ts = 1.337, )
            )
        else:
            return ResponseCodeSessionEventsGetLatestContentChangeEvent(
                status = 'success',
        )
        """

    def testResponseCodeSessionEventsGetLatestContentChangeEvent(self):
        """Test ResponseCodeSessionEventsGetLatestContentChangeEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
