# coding: utf-8

"""
    Convex App - OpenAPI 3.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from convex_client.models.response_actions_get_editor_snapshot import ResponseActionsGetEditorSnapshot

class TestResponseActionsGetEditorSnapshot(unittest.TestCase):
    """ResponseActionsGetEditorSnapshot unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseActionsGetEditorSnapshot:
        """Test ResponseActionsGetEditorSnapshot
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseActionsGetEditorSnapshot`
        """
        model = ResponseActionsGetEditorSnapshot()
        if include_optional:
            return ResponseActionsGetEditorSnapshot(
                status = 'success',
                error_message = '',
                error_data = None,
                value = convex_client.models.response_actions_get_editor_snapshot_value.Response_actions_getEditorSnapshot_value(
                    editor = convex_client.models.response_actions_get_editor_snapshot_value_editor.Response_actions_getEditorSnapshot_value_editor(
                        content = '', 
                        language = '', 
                        last_updated = 1.337, ), 
                    session_id = '', 
                    terminal = convex_client.models.response_actions_get_editor_snapshot_value_terminal.Response_actions_getEditorSnapshot_value_terminal(
                        execution_time = 1.337, 
                        is_error = True, 
                        output = '', ), )
            )
        else:
            return ResponseActionsGetEditorSnapshot(
                status = 'success',
        )
        """

    def testResponseActionsGetEditorSnapshot(self):
        """Test ResponseActionsGetEditorSnapshot"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
