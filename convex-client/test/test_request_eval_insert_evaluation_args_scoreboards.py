# coding: utf-8

"""
    Convex App - OpenAPI 3.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from convex_client.models.request_eval_insert_evaluation_args_scoreboards import RequestEvalInsertEvaluationArgsScoreboards

class TestRequestEvalInsertEvaluationArgsScoreboards(unittest.TestCase):
    """RequestEvalInsertEvaluationArgsScoreboards unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RequestEvalInsertEvaluationArgsScoreboards:
        """Test RequestEvalInsertEvaluationArgsScoreboards
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RequestEvalInsertEvaluationArgsScoreboards`
        """
        model = RequestEvalInsertEvaluationArgsScoreboards()
        if include_optional:
            return RequestEvalInsertEvaluationArgsScoreboards(
                communication = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication.Request_eval_insertEvaluation_args_scoreboards_communication(
                    clarification = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    thought_process = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), ),
                problem_solving = convex_client.models.request_eval_insert_evaluation_args_scoreboards_problem_solving.Request_eval_insertEvaluation_args_scoreboards_problemSolving(
                    optimal_solution = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    optimization_process = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    question_specific = , ),
                technical_competency = convex_client.models.request_eval_insert_evaluation_args_scoreboards_technical_competency.Request_eval_insertEvaluation_args_scoreboards_technicalCompetency(
                    code_quality = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    coding_speed = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    syntax_error = , ),
                testing = convex_client.models.request_eval_insert_evaluation_args_scoreboards_testing.Request_eval_insertEvaluation_args_scoreboards_testing(
                    debugging = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    test_case_coverage = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    test_case_design = , )
            )
        else:
            return RequestEvalInsertEvaluationArgsScoreboards(
                communication = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication.Request_eval_insertEvaluation_args_scoreboards_communication(
                    clarification = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    thought_process = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), ),
                problem_solving = convex_client.models.request_eval_insert_evaluation_args_scoreboards_problem_solving.Request_eval_insertEvaluation_args_scoreboards_problemSolving(
                    optimal_solution = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    optimization_process = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    question_specific = , ),
                technical_competency = convex_client.models.request_eval_insert_evaluation_args_scoreboards_technical_competency.Request_eval_insertEvaluation_args_scoreboards_technicalCompetency(
                    code_quality = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    coding_speed = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    syntax_error = , ),
                testing = convex_client.models.request_eval_insert_evaluation_args_scoreboards_testing.Request_eval_insertEvaluation_args_scoreboards_testing(
                    debugging = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    test_case_coverage = convex_client.models.request_eval_insert_evaluation_args_scoreboards_communication_clarification.Request_eval_insertEvaluation_args_scoreboards_communication_clarification(
                        comment = '', 
                        description = '', 
                        examples = [
                            ''
                            ], 
                        max_score = 1.337, 
                        score = 1.337, 
                        test_name = '', ), 
                    test_case_design = , ),
        )
        """

    def testRequestEvalInsertEvaluationArgsScoreboards(self):
        """Test RequestEvalInsertEvaluationArgsScoreboards"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
