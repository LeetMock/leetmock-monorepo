# coding: utf-8

"""
    Convex App - OpenAPI 3.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from convex_client.models.response_code_session_events_get_next_event_batch import ResponseCodeSessionEventsGetNextEventBatch

class TestResponseCodeSessionEventsGetNextEventBatch(unittest.TestCase):
    """ResponseCodeSessionEventsGetNextEventBatch unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseCodeSessionEventsGetNextEventBatch:
        """Test ResponseCodeSessionEventsGetNextEventBatch
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseCodeSessionEventsGetNextEventBatch`
        """
        model = ResponseCodeSessionEventsGetNextEventBatch()
        if include_optional:
            return ResponseCodeSessionEventsGetNextEventBatch(
                status = 'success',
                error_message = '',
                error_data = None,
                value = [
                    convex_client.models.response_code_session_events_get_next_event_batch_value_inner.Response_codeSessionEvents_getNextEventBatch_value_inner(
                        event = null, 
                        ts = 1.337, )
                    ]
            )
        else:
            return ResponseCodeSessionEventsGetNextEventBatch(
                status = 'success',
        )
        """

    def testResponseCodeSessionEventsGetNextEventBatch(self):
        """Test ResponseCodeSessionEventsGetNextEventBatch"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
