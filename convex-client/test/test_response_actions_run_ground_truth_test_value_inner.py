# coding: utf-8

"""
    Convex App - OpenAPI 3.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from convex_client.models.response_actions_run_ground_truth_test_value_inner import ResponseActionsRunGroundTruthTestValueInner

class TestResponseActionsRunGroundTruthTestValueInner(unittest.TestCase):
    """ResponseActionsRunGroundTruthTestValueInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseActionsRunGroundTruthTestValueInner:
        """Test ResponseActionsRunGroundTruthTestValueInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseActionsRunGroundTruthTestValueInner`
        """
        model = ResponseActionsRunGroundTruthTestValueInner()
        if include_optional:
            return ResponseActionsRunGroundTruthTestValueInner(
                actual = None,
                case_number = 1.337,
                error = '',
                expected = None,
                input = convex_client.models.input.input(),
                passed = True,
                stdout = ''
            )
        else:
            return ResponseActionsRunGroundTruthTestValueInner(
                actual = None,
                case_number = 1.337,
                error = '',
                expected = None,
                input = convex_client.models.input.input(),
                passed = True,
                stdout = '',
        )
        """

    def testResponseActionsRunGroundTruthTestValueInner(self):
        """Test ResponseActionsRunGroundTruthTestValueInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
