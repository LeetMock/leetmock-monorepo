# coding: utf-8

"""
    Convex App - OpenAPI 3.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from convex_client.models.response_code_session_events_get_latest_user_testcase_executed_event_value import ResponseCodeSessionEventsGetLatestUserTestcaseExecutedEventValue

class TestResponseCodeSessionEventsGetLatestUserTestcaseExecutedEventValue(unittest.TestCase):
    """ResponseCodeSessionEventsGetLatestUserTestcaseExecutedEventValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseCodeSessionEventsGetLatestUserTestcaseExecutedEventValue:
        """Test ResponseCodeSessionEventsGetLatestUserTestcaseExecutedEventValue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseCodeSessionEventsGetLatestUserTestcaseExecutedEventValue`
        """
        model = ResponseCodeSessionEventsGetLatestUserTestcaseExecutedEventValue()
        if include_optional:
            return ResponseCodeSessionEventsGetLatestUserTestcaseExecutedEventValue(
                event = convex_client.models.request_code_session_events_commit_code_session_event_args_event_one_of_4.Request_codeSessionEvents_commitCodeSessionEvent_args_event_oneOf_4(
                    data = convex_client.models.request_code_session_events_commit_code_session_event_args_event_one_of_4_data.Request_codeSessionEvents_commitCodeSessionEvent_args_event_oneOf_4_data(
                        test_results = [
                            convex_client.models.response_actions_run_ground_truth_test_value_inner.Response_actions_runGroundTruthTest_value_inner(
                                actual = null, 
                                case_number = 1.337, 
                                error = '', 
                                expected = null, 
                                input = convex_client.models.input.input(), 
                                passed = True, 
                                stdout = '', )
                            ], ), 
                    type = 'user_testcase_executed', ),
                id = '',
                ts = 1.337
            )
        else:
            return ResponseCodeSessionEventsGetLatestUserTestcaseExecutedEventValue(
                event = convex_client.models.request_code_session_events_commit_code_session_event_args_event_one_of_4.Request_codeSessionEvents_commitCodeSessionEvent_args_event_oneOf_4(
                    data = convex_client.models.request_code_session_events_commit_code_session_event_args_event_one_of_4_data.Request_codeSessionEvents_commitCodeSessionEvent_args_event_oneOf_4_data(
                        test_results = [
                            convex_client.models.response_actions_run_ground_truth_test_value_inner.Response_actions_runGroundTruthTest_value_inner(
                                actual = null, 
                                case_number = 1.337, 
                                error = '', 
                                expected = null, 
                                input = convex_client.models.input.input(), 
                                passed = True, 
                                stdout = '', )
                            ], ), 
                    type = 'user_testcase_executed', ),
                id = '',
                ts = 1.337,
        )
        """

    def testResponseCodeSessionEventsGetLatestUserTestcaseExecutedEventValue(self):
        """Test ResponseCodeSessionEventsGetLatestUserTestcaseExecutedEventValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
