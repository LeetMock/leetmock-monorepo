# coding: utf-8

"""
    Convex App - OpenAPI 3.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from convex_client.models.request_functions_run_session_aggregation_backfill import RequestFunctionsRunSessionAggregationBackfill

class TestRequestFunctionsRunSessionAggregationBackfill(unittest.TestCase):
    """RequestFunctionsRunSessionAggregationBackfill unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RequestFunctionsRunSessionAggregationBackfill:
        """Test RequestFunctionsRunSessionAggregationBackfill
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RequestFunctionsRunSessionAggregationBackfill`
        """
        model = RequestFunctionsRunSessionAggregationBackfill()
        if include_optional:
            return RequestFunctionsRunSessionAggregationBackfill(
                args = convex_client.models.request_functions_backfill_aggregates_migration_args.Request_functions_backfillAggregatesMigration_args(
                    batch_size = 1.337, 
                    cursor = '', 
                    dry_run = True, 
                    fn = '', 
                    next = [
                        ''
                        ], )
            )
        else:
            return RequestFunctionsRunSessionAggregationBackfill(
                args = convex_client.models.request_functions_backfill_aggregates_migration_args.Request_functions_backfillAggregatesMigration_args(
                    batch_size = 1.337, 
                    cursor = '', 
                    dry_run = True, 
                    fn = '', 
                    next = [
                        ''
                        ], ),
        )
        """

    def testRequestFunctionsRunSessionAggregationBackfill(self):
        """Test RequestFunctionsRunSessionAggregationBackfill"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
